; *************************
; Project: FrOSt
; File: testWrite.dasm
; *************************

:debug_titre dat "Debugging screen", 0
:debug_text dat "Infos about file system : ", 0
:debug_strInfos dat "Name :", 0x11, "Serial number : 0x    , 0x", 0x11, "FAT copies :", 0x11, "FAT size :", 0x11, "Root entries :", 0
:debug_notValidDisk dat "This is not a FFAT16 valid disk.Error code (hex) : ", 0
:debug_notValidDisk2 dat "Press enter to format (/!\ AT YOUR OWN RISKS/!\)", 0
:debug_strDone dat "Done.", 0
:buffer dat 0, 0, 0, 0, 0
:buffer2 dat 0, 0, 0, 0, 0

:debug
	set B, 0x2000
	jsr lem1802_setColor

	set B, debug_text
	set I, 1
	set J, 1
	int INT_PRINTF
	
	jsr FFAT16_init

	ifn Y, 0
		set PC, debug_printNotValid
	
	set B, debug_strInfos
	set I, 2
	set J, 1
	int INT_PRINTF
	
	set B, volumeName
	set I, 0x27
	jsr lem1802_puts
	
	; ===================
	; MASSIVE DUMP TIME
	; ===================
	
	
	; SERIAL NUMBER
	; -------------
	jsr debug_clearBuffer
	
	set A, [serialNumber]
	set B, 16
	set C, buffer
	jsr dump
	
	set A, serialNumber
	add A, 1
	set A, [A]
	set B, 16
	set C, buffer2
	jsr dump
	
	
	set B, buffer
	set I, 0x52
	jsr lem1802_puts
	
	set B, buffer2
	set I, 0x5A
	jsr lem1802_puts
	
	; FAT COPIES NB
	; -------------
	jsr debug_clearBuffer
	
	set A, [FAT_nb]
	set B, 10
	set C, buffer
	jsr dump
	
	set B, buffer
	set I, 0x6D
	jsr lem1802_puts
	
	; FAT SIZE
	; --------
	jsr debug_clearBuffer
	
	set A, [FAT_size]
	set B, 10
	set C, buffer
	jsr dump
	
	set B, buffer
	set I, 0x8B
	jsr lem1802_puts
	
	; ROOT ENTRIES NB
	; ---------------
	jsr debug_clearBuffer
	set [0xFFB0], [rootEntries_nb]
	set A, [rootEntries_nb]
	set B, 10
	set C, buffer
	jsr dump
	
	set B, buffer
	set I, 0xAF
	jsr lem1802_puts
	
	set pc,end
	
	
:debug_clearBuffer
	set PUSH, I
	set PUSH, J
	
	set I, buffer
	
	:debug_clearBuffer_loop0
		STI [I], 0
		ifn I, buffer2
			set PC, debug_clearBuffer_loop0
	
	
	set J, POP ; #TROLOLO
	set I, POP
	set PC, POP
	
:debug_printNotValid
	set B, debug_notValidDisk
	set I, 2
	set J, 1
	int INT_PRINTF
	
	set A, Y
	set B, 16
	set C, mem_print
	jsr dump
	
	set B, mem_print
	set I, 4
	int INT_PRINTF
	
	set B, debug_notValidDisk2
	set I, 5
	int INT_PRINTF
	
	set A, 0
	hwi [id_keyboard1] ;On efface le buffer du clavier
	
	;On attend que l'utilisateur press entr√©e
	set A, 1
	:debug_printNotValid_loop0
		hwi [id_keyboard1]
		ifn C, 0x11 ;0x11 = RETURN
			set PC, debug_printNotValid_loop0
	
	jsr FFAT16_format
	
	set B, debug_strDone
	set I, 7
	int INT_PRINTF
	
	set pc, end