:console
	int INT_CLEARSCREEN

	set B, 0x2000
	jsr lem1802_setColor

	set B, console_welcomeMessage
	set I, 1
	set J, 1
	int INT_PRINTF ;printf

	ife [nb_speakers], 1
		jsr console_startupSound

	set A, txt_commands
	sub A, ptr_commands
	add A, 1
	set [nb_commands], A

	set B, 31 ; We allocate 31 words to save the command (32 characters - promt "> " + \0 (so it is considered a string)
	int INT_MALLOC ; MALLOC
	ife Z, 0xFFFF ; No memory left
		set PC, console_errorNotEnoughFreeSpace
	set push,Z
	int INT_MALLOC ; MALLOC
	ife Z, 0xFFFF ; No memory left
		set PC, console_errorNotEnoughFreeSpace
	set push,Z
	int INT_MALLOC ; MALLOC
	ife Z, 0xFFFF ; No memory left
		set PC, console_errorNotEnoughFreeSpace
	set push,Z

	:console_loop
		set C, '>' ; 0x3e : ">"
		set I, [SCREEN_HEIGHT]
		set J,1
		int INT_PRINTC ; printc
		set J,3
		set C,0x0220 ; Green space
		int INT_PRINTC
		JSR console_readLine
		set PC, console_loop


:console_errorNotEnoughFreeSpace ; Generic routine that displays an error and crashes the DCPU.
	int INT_CLEARSCREEN ; clear_screen
	set B, console_errorNotEnoughFreeSpace_text
	set I, 1
	set J, 1
	int INT_PRINTF ; printf
	set PC, end

:console_startupSound
	set I, console_startupsound_notes
	set J, console_startupsound_durations
	set A, 0

	:console_startupSound_loop0
		set B, [I]
		set C, [J]
		add I, 1
		add J, 1
		int INT_SOUND

		mul C, 20
		set B, -1
		:console_startupSound_loop1
			add B, 1
			ifn B, C
				set PC, console_startupSound_loop1

		ife J, console_startupsound_end
			set PC, POP

		set PC, console_startupSound_loop0
