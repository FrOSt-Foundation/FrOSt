;---------------------------------------------
;DAT CONSOLE
;---------------------------------------------
:invite_FrSH dat "FrSH>",0
:pos_curseur dat 6
:curseur_FrSH dat 0x9F




;---------------------------------------------
;INITIALISATION DE LA CONSOLE
;ON EFFACE L'ECRAN ET ON AFFICHE L'INVITE
;---------------------------------------------
:init_console
int 0xF
set B , 0x2000
int 0x4
JSR affiche_invite
JSR affiche_curseur
set pc , pop

:affiche_invite
set push , B
set push , I
set push , J
set B , invite_FrSH
set i , 12
set j , 1
int 0x3
set J , pop
set I , pop
set B , pop
set pc , pop

:affiche_curseur
set push , B
set push , I
set push , J
set C , [curseur_FrSH]
set i , 12
set j , [pos_curseur]
MOD j , 32
int 0x6
set J , pop
set I , pop
set B , pop
set pc , pop



:console_traiter_caractere
ife C , 0x10
	set pc,efface_caractere
ife C , 0x11
	set pc,valide_commande
ifl C,0x80
	ifg C,0x19
		set pc,affiche_caractere
set pc,pop


:affiche_caractere
set push , I
set push , J
ife [pos_curseur] , 31
	set pc , fin_affiche_caractere
set i , 12
set j , [pos_curseur]
int 0x6
add [pos_curseur] , 1
JSR affiche_curseur
set pc , fin_affiche_caractere
:fin_affiche_caractere
set j , pop
set i , pop
set pc , pop

:efface_caractere
set push , i
set push , j
ife [pos_curseur] , 6
	set pc , fin_efface_caractere
set i , 12
set j , [pos_curseur]
set C , 0
set push,[couleur]
set [couleur],0
int 0x6
set [couleur],pop
sub [pos_curseur] , 1
JSR affiche_curseur
set pc , fin_efface_caractere
:fin_efface_caractere
set j , pop
set i , pop
set pc , pop


:valide_commande
set push , I
set I , 12
JSR interprete_commande
int 0x10
int 0x7
JSR affiche_invite
set [pos_curseur] , 6
JSR affiche_curseur
JSR vider_parse
set i , pop
set pc , pop

:touche_echap
int 0xB
set pc , pop
