; ---------------
;  keyboard_init
; ---------------
; Description:
;     - Inits the keyboard. Used by the hardware manager.
; Arguments:
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     -

:keyboard_init
	set B, INT_KEYBOARD
	jsr keyboard_setInterrupt
	set PC, POP

; -----------------------
;  keyboard_clearBuffer
; -----------------------
; Description:
;     - Clears the keyboard buffer.
; Arguments:
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     - C: 1 if key pressed, 0 if not.

:keyboard_clearBuffer
	set PUSH, A

	set A, 0
	hwi [J]

	set A, POP
	set PC, POP

; -----------------------
;  keyboard_isKeyPressed
; -----------------------
; Description:
;     - Checks if a specific key has been pressed.
; Arguments:
;     - B: The key code to check.
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     - C: 1 if key pressed, 0 if not.

:keyboard_isKeyPressed
	set PUSH, A
	set PUSH, B

	set A, 2
	hwi [J]

	set B, POP
	set A, POP

; --------------
;  keyboard_getNextPressedKey
; --------------
; Description:
;     - Store next key typed.
; Arguments:
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     - C: next key, or 0 if buffer empty.

:keyboard_getNextPressedKey
	set PUSH, A

	set A, 1
	hwi [J]

	set A, POP
	set PC, POP

; --------------
;  keyboard_setInterrupt
; --------------
; Description:
;     - Sets the interrupt message for the keyboard
; Arguments:
;     - B: Message
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     -

:keyboard_setInterrupt
	set PUSH, A

	set A, 3
	hwi [J]

	set A, POP
	set PC, POP
