; --------------
;  dd_init
; --------------
; Description:
;     - Inits the DD. Used by the hardware manager.
; Arguments:
;     - (Not used) J: Device ID
;     - (Not used) Y: Device version
;     - (Not used) Z: Device data location
; Returns:
;     -

:dd_init

set pc, pop

; --------------
;  dd_isReadOnly
; --------------
; Description:
;     - Checks if disk is read only.
; Arguments:
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     - Z : TRUE if read only, FALSE otherwise

:dd_isReadOnly
	set PUSH, A

	set A, 1
	hwi [J]

	jsr dd_waitForOperation

	set A, 0
	ife B, 2
		set A, 1

	set A, POP
	set PC, POP


; --------------
;  dd_waitForOperation
; --------------
; Description:
;     - Blocks until the drive has finished reading or writing
; Arguments:
;     - J: Device ID
;     - (Not used) Z: Device data location
; Returns:
;     - Z: TRUE if read only, FALSE otherwise

:dd_waitForOperation
	set PUSH, A
	set PUSH, B
	set PUSH, C

	set A, 0
	:dd_waitForOperation_loop0
		hwi [J]
		ife B, 0x0003 ;If STATE_BUSY
			set PC, dd_waitForOperation_loop0
		ife B, 0x0004 ; If STATE_PARKED
			set PC, dd_waitForOperation_loop0

	set C, POP
	set B, POP
	set A, POP

	set PC, POP


; --------------
;  dd_setInterrupt
; --------------
; Description:
;     - Sets the interrupt.
; Arguments:
;     - B: Interrupt
;     - J: Device ID
;     - Z: Device data location
; Returns:
;     -

:dd_setInterrupt
	set A, 0x0001
	hwi [J]

	set [Z], B

	set PC, POP


; --------------
;  dd_readSector
; --------------
; Description:
;     - Reads a sector to a malloc'ed block of memory.
; Arguments:
;     - J: Device ID
;     - X: Sector to read
;     - Z: (Not used) Device data location
; Returns:
;     - Z: Dynamically allocated block in Z.

:dd_readSector
	set PUSH, A
	set PUSH, B
	set PUSH, Y
	set EX, 0
	set B, 512
	int INT_MALLOC
	 ife Z, MALLOC_ERROR
		set PC, dd_readSector_error0

	set A, 2
	set Y, Z
	hwi [J]
	ifn B, 1 ;Si erreur
		set PC, dd_readSector_error1

	:dd_readSector_end
	set Y, POP
	set B, POP
	set A, POP
	set PC, POP

	:dd_readSector_error0
		set EX, 0x0003
		set PC, dd_readSector_end

	:dd_readSector_error1
		set EX, 0x0004
		set PC, dd_readSector_end

; --------------
;  dd_writeSector
; --------------
; Description:
;     - Writes a sector to the disk.
; Arguments:
;     - J: Device ID
;     - X: Sector to write to
;     - Y: RAM location
;     - Z: (Not used) Device data location
; Returns:
;     - 
:dd_writeSector
	set PUSH, A
	set PUSH, B
	set PUSH, Y

	set EX, 0
	set A, 3
	hwi [J]

	ifn B, 1 ;If error
		set EX, 0x0004

	set Y, POP
	set B, POP
	set A, POP
	set PC, POP
