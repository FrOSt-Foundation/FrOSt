;---------------------------------------------
;MMU look at the program at [A] until B words are verified or "0xDA1A,0xDA1A,0xDA1A" is found
;add the offset C to all the adresses
;DOESN'T VERIFY ANY OTHER COMMAND THAN SET JSR ADD SUB MUL DIV !!
;---------------------------------------------
:MMU
set push,A
set push,B
set push,I
set I,B
add I,A
:MMU_loop
set B,[A]
ife B,0x7f81
;set PC,label
	set PC,MMU_PC
ife B,0x7B81
;set PC,[label]
	set PC,MMU_PC
ife B,0x7F61
;set SP,label
	set PC,MMU_PC
ife B,0x7B61
;set SP,[label]
	set PC,MMU_PC
and B,0x00ff
ife B,0x7b
;command [label],[label]
	set PC,MMU_REG
ife B,0x20
;jsr
	set PC,MMU_PC
ifg B,0xC1
	ifl B,0xC6
;command [label],reg
		set PC,MMU_REG2
ife B,0xD2
;ife
	set PC,MMU_IFE
ife B,0x12
	set PC,MMU_IFE
set B,[A]
and B,0xff00
shr B,8
ife B,0x78
;command reg,[label]
	set PC,MMU_REG3
:MMU_end_loop
add A,1
ifn A,I
	ife [A],0xDA1A
		ife [A+1],0xDA1A
			ife [A+2],0xDA1A
				set pc,MMU_end
ife A,I
	set pc,MMU_end
set pc,MMU_loop
.MMU_end
set I,pop
set B,pop
set A,pop
set PC,pop
:MMU_PC
add A,1
add [A],C
set PC,MMU_end_loop
:MMU_REG
set B,[A]
and B,0x00ff
ifl B,0xC1
	set PC,MMU_end_loop
ifg B,0xC6
	set PC,MMU_end_loop
add A,1
add [A],C
add A,1
add [A],C
set PC,MMU_end_loop
:MMU_REG2
add A,1
add [A],C
set PC,MMU_end_loop
:MMU_REG3
set B,[A]
and B,0x000f
ifg B,6
	ifl B,1
		set PC,MMU_end_loop
add A,1
add [A],C
set PC,MMU_end_loop
:MMU_IFE
set B,[A]
ife B,0x7C12
	set PC,MMU_end_loop
add A,1
add [A],C
ife B,0x7BD2
	add A,1
ife B,0x7BD2
	add [A],C
set PC,MMU_end_loop
