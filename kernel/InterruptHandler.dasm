;---------------------------------------------
;INITIALISATION DE L'IH
;PAS DE MODIFICATION DES REGISTRES
;---------------------------------------------
:init_interrupthandler
IAS interrupt_handler
set pc , pop

;--------------------------------------------------------
;INTERRUPT HANDLER
;msg 0xabab is for the clock
;msg 0xbcbc is for the keyboard
;msg 0xcdcd -> lecteur de disquette
;msf 0x1 malloc B blocs
;msg 0x2 free the b bloc
;msg 0x3 printf B-> string I-> line J-> colonne
;msg 0x4 changer de couleur, couleur dans B
;msg 0x5 scroll ecran d'une ligne
;msg 0x6 printc carac dans C, ligne dans I, colone dans J
;msg 0x7 efface ligne I abandonne
;msg 0x8 scroll from, ligne dans I abandonne
;msg 0x9 clear ecran
;msg 0xA efface memoire
;msg 0xF clear the screen
;msg 0x10 launch
;msg 0x11 stop the execution of a program, return msg in B


;--------------------------------------------------------
:interrupt_handler

ife A , 0x1
	set pc , ih_malloc
ife A , 0x2
	set pc , ih_free
ife A , 0x3
	set pc , ih_printf
ife A , 0x4
	set pc , ih_couleur
ife A , 0x5
	set pc , ih_scroll_ecran
ife A , 0x6
	set pc , ih_printc
ife A, 0x9
	set pc , ih_clear_screen
ife A , 0xA
	set pc , ih_efface_memoire
ife A , 0xF
	set pc , ih_clear
ife A , 0x10
	set pc , ih_launch
ife A,0x11
	set pc,ih_stop
ife A, 0xabab
	set pc , ih_clock
ife A,0xbcbc
    set pc , ih_clavier
ife A , 0xcdcd
	set pc , ih_disquette
rfi 1

:ih_clavier
set push,C
set A , 1
hwi [id_clavier]
ife c , 0x1B
	JSR ecran_bascule_ecran
ife [FOCUS_CLAVIER],0x1
	set [currently_running],0
iaq 0
ife [FOCUS_CLAVIER] , 0x1
	JSR console_traiter_caractere
set [key_int],1
set A,C
set C,pop
set PC,Scheduler
	
:ih_clear
set A,[ecran_actif]
set [ecran_actif],[VRAM2]
ifl [SP+1],[start_mem]
	set [ecran_actif],[VRAM1]
JSR clear
set [ecran_actif],A
rfi 0

:ih_malloc
set A , B
JSR malloc
rfi 0

:ih_free
set A , B
JSR free
rfi 0

:ih_printf
set A,[ecran_actif]
set [ecran_actif],[VRAM2]
ifl [SP+1],[start_mem]
	set [ecran_actif],[VRAM1]
set push,A
set A , B
JSR printf
set [ecran_actif],pop
rfi 0

:ih_couleur
JSR change_couleur
rfi 0

:ih_scroll_ecran
set A,[ecran_actif]
set [ecran_actif],[VRAM2]
ifl [SP+1],[start_mem]
	set [ecran_actif],[VRAM1]
set push,I
set I,B
JSR scroll
set I,pop
set [ecran_actif],A
rfi 0

:ih_printc
set A,[ecran_actif]
set [ecran_actif],[VRAM2]
ifl [SP+1],[start_mem]
	set [ecran_actif],[VRAM1]
JSR printc
set [ecran_actif],A
rfi 0

:ih_clear_screen
set A,[ecran_actif]
set [ecran_actif],[VRAM2]
ifl [SP+1],[start_mem]
	set [ecran_actif],[VRAM1]
JSR clear
set [ecran_actif],A
rfi 0

:ih_efface_memoire
set A , B
JSR efface_memoire
rfi 0

:ih_clock
set [clock_int],1
set PC,Scheduler

:ih_launch
JSR launch
rfi 0

:ih_disquette
set [disk_int],1
set PC,Scheduler

:ih_ask_clavier
set A,Sched_table_prio
add A,[Sched_current]
add [A],1
set [Sched_time],0
set [clock_int],0
set pc,Scheduler

:ih_ask_disk
set A,Sched_table_prio
add A,[Sched_current]
add [A],2
set [Sched_time],0
set [clock_int],0
set pc,Scheduler

:ih_stop
set pc,Finisher