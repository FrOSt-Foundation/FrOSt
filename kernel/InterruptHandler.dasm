;---------------------------------------------
;INITIALISATION DE L'IH
;PAS DE MODIFICATION DES REGISTRES
;---------------------------------------------
:init_interrupthandler
IAS interrupt_handler
set push,A
set A,nombre_commandes
sub A,int_ptr
set [nombre_ptr],A
set A,pop
set pc , pop

;--------------------------------------------------------
;INTERRUPT HANDLER
;FAILS IN SILENCE IF ERROR
;msg 0x5000 is for the clock
;msg 0x6000 is for the keyboard
;msg 0x7000 -> lecteur de disquette

;msg 0x0000 malloc B blocs
;msg 0x0001 free the b bloc

;msg 0x1000 printf B-> string I-> line J-> colonne

;msg 0x2000 changer de couleur, couleur dans B
;msg 0x2001 scroll ecran d'une ligne

;msg 0x1001 printc carac dans C, ligne dans I, colone dans J

;msg 0x2002 efface ligne I (abandonne)
;msg 0x2003 scroll from, ligne dans I (abandonne)
;msg 0x2004 clear ecran

;msg 0x0002 efface memoire

;msg 0x3000 launch

;msg 0x4000 stop the execution of a program, return msg in B
;--------------------------------------------------------
:interrupt_handler
set push,A
shr A,12
ifg A,[nombre_ptr]
	set pc,ih_bug
add A,int_ptr
set A,pop
set pc,[A]
:ih_bug
set A,pop
rfi 1

:ih_mem
and A,0x000F
set [currently_running],[[proc_run]]
ife A,0
	set pc,ih_malloc
ife A,1
	set pc,ih_free
ife A,2
	set pc,ih_efface_memoire
rfi 1

:ih_print
and A,0x000F
set push,[ecran_actif]
set [ecran_actif],[[proc_run+3]]
ife A,0
	set pc,ih_printf
ife A,1
	set pc,ih_printc
set [ecran_actif],pop
rfi 1

:ih_screen
and A,0x000F
set push,[ecran_actif]
set [ecran_actif],[[proc_run+3]]
ife A,0
	set pc,ih_couleur
ife A,1
	set pc,ih_scroll_ecran
ife A,4
	set pc,ih_clear_screen
set [ecran_actif],pop
rfi 1

:ih_clavier
set [key_int],1
set pc,Scheduler
rfi 0

:ih_malloc
set A , B
JSR malloc
rfi 0

:ih_free
set A , B
JSR free
rfi 0

:ih_printf
set A , B
JSR printf
set [ecran_actif],pop
rfi 0

:ih_couleur
JSR change_couleur
set [ecran_actif],pop
rfi 0

:ih_scroll_ecran
set I,B
JSR scroll
set [ecran_actif],pop
rfi 0

:ih_printc
JSR printc
set [ecran_actif],pop
rfi 0

:ih_clear_screen
JSR clear
set [ecran_actif],pop
rfi 0

:ih_efface_memoire
set A , B
JSR efface_memoire
rfi 0

:ih_clock
set [clock_int],1
set pc,Scheduler
rfi 0

:ih_launch
JSR launch
rfi 0

:ih_disquette
set [disk_int],1
set pc,Scheduler
rfi 0

:ih_ask_clavier
rfi 0

:ih_ask_disk
rfi 0

:ih_stop
set pc,Finisher