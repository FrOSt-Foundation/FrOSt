;16 programs can work at the same time
:Sched_number dat 0
:Sched_time dat 1

:Sched_table_prog dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;the adr of PC when stopped
;prio : 0x msg msg hw prio   hw=1->key   hw=2->disk
:Sched_table_prio dat 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;the word of prio
:Sched_table_sp dat   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;the adr of SP when stopped
:Sched_current dat 0

:Sched_tmp dat 0

:Scheduler
ifl [Sched_number],2
	rfi 0
:sched_init
set A,pop
set [Sched_tmp],pop
set push,Ex
set push,I
set push,J
set push,X
set push,Y
set push,Z
set push,C
set push,B
set push,A
set A,[Sched_current]
add A,Sched_table_prog
set [A],[Sched_tmp]
set A,[Sched_current]
add A,Sched_table_sp
set [A],SP
;save of current program finished (frozen)
ife [clock_int],1
	set PC,Sched_clock
ife [key_int],1
	set PC,Sched_key
ife [disk_int],1
	set PC,Sched_disk
;error, we come back to the current program
:Sched_back
set [currently_running],[Sched_current]
add [currently_running],1
set A,[Sched_current]
add A,Sched_table_SP
set SP,[A]
set A,[Sched_current]
add A,Sched_table_prog
set [Sched_tmp],[A]
set A,pop
set B,pop
set C,pop
set Z,pop
set Y,pop
set X,pop
set J,pop
set I,pop
set Ex,pop
set push,[Sched_tmp]
set push,A
rfi 0

:Sched_clock ;pour l'instant un tourniquet
set [clock_int],0
sub [Sched_time],1
ifn [Sched_time],0
	set PC,Sched_back
add [Sched_current],1 ;on passe au programme suivant
ifg [Sched_current],[Sched_number]
	set [Sched_current],0
ife [Sched_current],[Sched_number]
	set [Sched_current],0
set [Sched_time],[div_clock] ;on récupère la rapidité de l'horloge
div [Sched_time],[Sched_number] ;on divise par le nombre de programmes en cours
set PC,Sched_back

:Sched_key ;reveille le programme qui attend le clavier
set [key_int],0
set A,Sched_table_prio
sub A,1
:Sched_key_boucle
ife A,Sched_table_sp
	set pc,Sched_back
add A,1
set B,[A]
and B,0x000F
ifn B,1
	set pc,Sched_key_boucle
sub [A],1
sub A,Sched_table_prio
set [Sched_current],A
set PC,Sched_back

:Sched_disk ;reveille le programme qui attend le lecteur de disquette
set [disk_int],0
set A,Sched_table_prio
sub A,1
:Sched_disk_boucle
ife A,Sched_table_sp
	set pc,Sched_back
add A,1
set B,[A]
and B,0x000F
ifn B,2
	set pc,Sched_disk_boucle
sub [A],2
sub A,Sched_table_prio
set [Sched_current],A
set PC,Sched_back
